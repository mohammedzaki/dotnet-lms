// <auto-generated />
using System;
using DigitalHubLMS.Core.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigitalHubLMS.Migrations.Migrations
{
    [DbContext(typeof(DigitalHubLMSContext))]
    partial class DigitalHubLMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Announcement", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("priority");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("announcements");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.AnnouncementDatum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("AnnouncementId")
                        .HasColumnType("bigint")
                        .HasColumnName("announcement_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AnnouncementId" }, "announcement_data_announcement_id_foreign");

                    b.ToTable("announcement_data");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.AnnouncementUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("AnnouncementId")
                        .HasColumnType("bigint")
                        .HasColumnName("announcement_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("Read")
                        .HasColumnType("bigint")
                        .HasColumnName("read");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AnnouncementId" }, "announcement_users_announcement_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "announcement_users_user_id_foreign");

                    b.ToTable("announcement_users");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Bundle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint")
                        .HasColumnName("instructor_id");

                    b.Property<int?>("IsAdmin")
                        .HasColumnType("int")
                        .HasColumnName("is_admin");

                    b.Property<int?>("IsTopCourse")
                        .HasColumnType("int")
                        .HasColumnName("is_top_course");

                    b.Property<string>("Language")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("language");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("level");

                    b.Property<string>("Outcomes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("outcomes");

                    b.Property<byte?>("Published")
                        .HasColumnType("tinyint")
                        .HasColumnName("published");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requirements");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("video_url");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InstructorId" }, "bundles_instructor_id_foreign");

                    b.ToTable("bundles");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.BundleCourse", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("BundleId")
                        .HasColumnType("bigint")
                        .HasColumnName("bundle_id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BundleId" }, "bundle_courses_bundle_id_foreign");

                    b.HasIndex(new[] { "CourseId" }, "bundle_courses_course_id_foreign");

                    b.ToTable("bundle_courses");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.BundleEnrol", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("BundleId")
                        .HasColumnType("bigint")
                        .HasColumnName("bundle_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BundleId" }, "bundle_enrols_bundle_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "bundle_enrols_user_id_foreign");

                    b.ToTable("bundle_enrols");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("Parent")
                        .HasColumnType("int")
                        .HasColumnName("parent");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("thumbnail");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Certificate", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasComment("1-published 0-Not Published");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "certificates_course_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "certificates_user_id_foreign");

                    b.ToTable("certificates");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassDatum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_data_course_class_id_foreign");

                    b.ToTable("class_data");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("DocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("document_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_document_course_class_id_foreign");

                    b.HasIndex(new[] { "DocumentId" }, "class_document_document_id_foreign");

                    b.ToTable("class_document");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassMedium", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("MediaId")
                        .HasColumnType("bigint")
                        .HasColumnName("media_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_media_course_class_id_foreign");

                    b.HasIndex(new[] { "MediaId" }, "class_media_media_id_foreign");

                    b.ToTable("class_media");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassMetum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_key");

                    b.Property<string>("MetaValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_value");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_meta_course_class_id_foreign");

                    b.ToTable("class_meta");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuiz", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint")
                        .HasColumnName("quiz_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_quiz_course_class_id_foreign");

                    b.HasIndex(new[] { "QuizId" }, "class_quiz_quiz_id_foreign");

                    b.ToTable("class_quiz");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuizAnswer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<byte>("Attempt")
                        .HasColumnType("tinyint")
                        .HasColumnName("attempt");

                    b.Property<long>("ClassQuizTakeId")
                        .HasColumnType("bigint")
                        .HasColumnName("class_quiz_take_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("OptionId")
                        .HasColumnType("bigint")
                        .HasColumnName("option_id");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint")
                        .HasColumnName("question_id");

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint")
                        .HasColumnName("score");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClassQuizTakeId" }, "class_quiz_answers_class_quiz_take_id_foreign");

                    b.HasIndex(new[] { "OptionId" }, "class_quiz_answers_option_id_foreign");

                    b.HasIndex(new[] { "QuestionId" }, "class_quiz_answers_question_id_foreign");

                    b.ToTable("class_quiz_answers");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuizTake", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Attempt")
                        .HasColumnType("int")
                        .HasColumnName("attempt");

                    b.Property<long>("ClassQuizId")
                        .HasColumnType("bigint")
                        .HasColumnName("class_quiz_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int?>("QuizResult")
                        .HasColumnType("int")
                        .HasColumnName("quiz_result");

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint")
                        .HasColumnName("score");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClassQuizId" }, "class_quiz_takes_class_quiz_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "class_quiz_takes_user_id_foreign");

                    b.ToTable("class_quiz_takes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassUserMetum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int?>("Completed")
                        .HasColumnType("int")
                        .HasColumnName("completed");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "class_user_meta_course_class_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "class_user_meta_user_id_foreign");

                    b.ToTable("class_user_meta");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Course", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<long>("InstructorId")
                        .HasColumnType("bigint")
                        .HasColumnName("instructor_id");

                    b.Property<byte>("Published")
                        .HasColumnType("tinyint")
                        .HasColumnName("published");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("thumbnail");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InstructorId" }, "courses_instructor_id_foreign");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseCategory", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "course_category_category_id_foreign");

                    b.HasIndex(new[] { "CourseId" }, "course_category_course_id_foreign");

                    b.ToTable("course_category");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseClass", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Duration")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("duration");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<long>("SectionId")
                        .HasColumnType("bigint")
                        .HasColumnName("section_id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_classes_course_id_foreign");

                    b.HasIndex(new[] { "SectionId" }, "course_classes_section_id_foreign");

                    b.ToTable("course_classes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDatum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_data_course_id_foreign");

                    b.ToTable("course_data");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDepartment", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_department_course_id_foreign");

                    b.HasIndex(new[] { "GroupId" }, "course_department_group_id_foreign");

                    b.ToTable("course_department");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint")
                        .HasColumnName("document_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_document_course_id_foreign");

                    b.HasIndex(new[] { "DocumentId" }, "course_document_document_id_foreign");

                    b.ToTable("course_document");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseEnrol", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long?>("CurrentClass")
                        .HasColumnType("bigint")
                        .HasColumnName("current_class");

                    b.Property<long?>("Progress")
                        .HasColumnType("bigint")
                        .HasColumnName("progress");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_enrols_course_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "course_enrols_user_id_foreign");

                    b.ToTable("course_enrols");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseImage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint")
                        .HasColumnName("image_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_image_course_id_foreign");

                    b.HasIndex(new[] { "ImageId" }, "course_image_image_id_foreign");

                    b.ToTable("course_image");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseMedium", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long?>("MediaId")
                        .HasColumnType("bigint")
                        .HasColumnName("media_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_media_course_id_foreign");

                    b.HasIndex(new[] { "MediaId" }, "course_media_media_id_foreign");

                    b.ToTable("course_media");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseMetum", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_key");

                    b.Property<string>("MetaValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("meta_value");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "course_meta_course_id_foreign");

                    b.ToTable("course_meta");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Document", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<long>("Downloads")
                        .HasColumnType("bigint")
                        .HasColumnName("downloads");

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_key");

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte>("Private")
                        .HasColumnType("tinyint")
                        .HasColumnName("private");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("size");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("uid")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Uid" }, "documents_uid_unique")
                        .IsUnique();

                    b.ToTable("documents");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.FailedJob", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("failed_at");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("queue");

                    b.HasKey("Id");

                    b.ToTable("failed_jobs");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Id1")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("_id")
                        .IsFixedLength(true);

                    b.Property<byte>("IsActive")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_active");

                    b.Property<byte>("IsLdap")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_ldap");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id1" }, "groups__id_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "groups_name_unique")
                        .IsUnique();

                    b.ToTable("groups");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<long>("Downloads")
                        .HasColumnType("bigint")
                        .HasColumnName("downloads");

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_key");

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte>("Private")
                        .HasColumnType("tinyint")
                        .HasColumnName("private");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("size");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("uid")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Uid" }, "images_uid_unique")
                        .IsUnique();

                    b.ToTable("images");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Job", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<byte>("Attempts")
                        .HasColumnType("tinyint")
                        .HasColumnName("attempts");

                    b.Property<int>("AvailableAt")
                        .HasColumnType("int")
                        .HasColumnName("available_at");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("queue");

                    b.Property<int?>("ReservedAt")
                        .HasColumnType("int")
                        .HasColumnName("reserved_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Queue" }, "jobs_queue_index");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Medium", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<long>("Downloads")
                        .HasColumnType("bigint")
                        .HasColumnName("downloads");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("duration");

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_key");

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<byte>("Private")
                        .HasColumnType("tinyint")
                        .HasColumnName("private");

                    b.Property<string>("Quality")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("quality");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("size");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("uid")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Uid" }, "media_uid_unique")
                        .IsUnique();

                    b.ToTable("media");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Migration", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Batch")
                        .HasColumnType("int")
                        .HasColumnName("batch");

                    b.Property<string>("Migration1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("migration");

                    b.HasKey("Id");

                    b.ToTable("migrations");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Note", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<long>("CourseClassId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_class_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseClassId" }, "notes_course_class_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "notes_user_id_foreign");

                    b.ToTable("notes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Option", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<byte>("Correct")
                        .HasColumnType("tinyint")
                        .HasColumnName("correct");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Option1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("option");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint")
                        .HasColumnName("question_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QuestionId" }, "options_question_id_foreign");

                    b.ToTable("options");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.PasswordReset", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("token");

                    b.HasIndex(new[] { "Email" }, "password_resets_email_index");

                    b.ToTable("password_resets");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ProfilePicture", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file_key");

                    b.Property<string>("Id1")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("_id")
                        .IsFixedLength(true);

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id1" }, "profile_pictures__id_unique")
                        .IsUnique();

                    b.ToTable("profile_pictures");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<string>("Question1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question");

                    b.Property<long>("QuizId")
                        .HasColumnType("bigint")
                        .HasColumnName("quiz_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "QuizId" }, "questions_quiz_id_foreign");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("quizzes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Rating", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<double?>("Rating1")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("review");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "ratings_course_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "ratings_user_id_foreign");

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<byte>("IsActive")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_active");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("_Id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("_id")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "_Id" }, "roles__id_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Level" }, "roles_level_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Name" }, "roles_name_unique")
                        .IsUnique();

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ConcurrencyStamp = "167860ad-4ade-4725-92b9-d8b57815b919",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 162, DateTimeKind.Local).AddTicks(1490),
                            CreatedBy = 1L,
                            IsActive = (byte)1,
                            Level = 0,
                            Name = "system",
                            NormalizedName = "SYSTEM",
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(600),
                            UpdatedBy = 1L,
                            _Id = "7be3e993-425f-4575-a642-8715ab1fd7c1"
                        },
                        new
                        {
                            Id = 2L,
                            ConcurrencyStamp = "167860ad-4ade-4725-92b9-d8b57815b919",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1300),
                            CreatedBy = 1L,
                            IsActive = (byte)1,
                            Level = 1,
                            Name = "admin",
                            NormalizedName = "ADMIN",
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1310),
                            UpdatedBy = 1L,
                            _Id = "0c515869-132e-4f65-b078-e9646aaabfd1"
                        },
                        new
                        {
                            Id = 3L,
                            ConcurrencyStamp = "167860ad-4ade-4725-92b9-d8b57815b919",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1320),
                            CreatedBy = 1L,
                            IsActive = (byte)1,
                            Level = 3,
                            Name = "supervisor",
                            NormalizedName = "SUPERVISOR",
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1320),
                            UpdatedBy = 1L,
                            _Id = "aa9930ca-cb8e-492d-8058-63edff77c5e4"
                        },
                        new
                        {
                            Id = 4L,
                            ConcurrencyStamp = "167860ad-4ade-4725-92b9-d8b57815b919",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1330),
                            CreatedBy = 1L,
                            IsActive = (byte)1,
                            Level = 4,
                            Name = "instructor",
                            NormalizedName = "INSTRUCTOR",
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1330),
                            UpdatedBy = 1L,
                            _Id = "55ec9f9c-43bd-4a37-bf53-a0312d7b544f"
                        },
                        new
                        {
                            Id = 5L,
                            ConcurrencyStamp = "167860ad-4ade-4725-92b9-d8b57815b919",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1340),
                            CreatedBy = 1L,
                            IsActive = (byte)1,
                            Level = 5,
                            Name = "employee",
                            NormalizedName = "EMPLOYEE",
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 169, DateTimeKind.Local).AddTicks(1340),
                            UpdatedBy = 1L,
                            _Id = "dd3c0e71-e0cb-45a0-af9b-401090882087"
                        });
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("role_claims");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Section", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CourseId")
                        .HasColumnType("bigint")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CourseId" }, "sections_course_id_foreign");

                    b.ToTable("sections");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.SecurityQuestion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("question");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("security_questions");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Setting", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("key");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("settings");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Subtitle", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Mime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("uid")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Uid" }, "subtitles_uid_unique")
                        .IsUnique();

                    b.ToTable("subtitles");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("Tag1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tag");

                    b.Property<int?>("TagableId")
                        .HasColumnType("int")
                        .HasColumnName("tagable_id");

                    b.Property<string>("TagableType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tagable_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ApiKey")
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("api_key")
                        .IsFixedLength(true);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("confirm_code")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("ConfirmedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("confirmed_at");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("date")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<byte>("IsBanned")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_banned");

                    b.Property<byte>("IsLdap")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_ldap");

                    b.Property<byte>("IsVerified")
                        .HasColumnType("tinyint")
                        .HasColumnName("is_verified");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Otp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("otp");

                    b.Property<DateTime?>("OtpCreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("otp_created_at");

                    b.Property<DateTime?>("PasswordChangedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("password_changed_at");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("ProfilePictureId")
                        .HasColumnType("bigint")
                        .HasColumnName("profile_picture_id");

                    b.Property<string>("RememberToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("remember_token");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("username");

                    b.Property<string>("UserUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_url");

                    b.Property<string>("_Id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nchar(36)")
                        .HasColumnName("_id")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "_Id" }, "users__id_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "users_email_unique")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "users_username_unique")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d6e2c1f1-3a7b-4cf0-aea5-05deb4f12df7",
                            ConfirmCode = "1234                                ",
                            CreatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 172, DateTimeKind.Local).AddTicks(6410),
                            CreatedBy = 1L,
                            DisplayName = "Abdalla Salah",
                            Email = "ahmed.kamal@mped.gov.eg",
                            EmailConfirmed = true,
                            FirstName = "Abe",
                            IsBanned = (byte)0,
                            IsLdap = (byte)0,
                            IsVerified = (byte)0,
                            LastName = "Sal",
                            LockoutEnabled = false,
                            NormalizedEmail = "AHMED.KAMAL@MPED.GOV.EG",
                            NormalizedUserName = "ADMIN",
                            PasswordChangedAt = new DateTime(2021, 10, 22, 2, 29, 20, 172, DateTimeKind.Local).AddTicks(2930),
                            PasswordHash = "AQAAAAEAACcQAAAAEBu3ShA1B6T9d8Hu1/JYIVWNOqOZ2vy2/RIj3CC5g1gosnRRBk/aPLrP0YI9EowIsQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "27c0b512-9f7e-4ce7-bcff-6563379cbe20",
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2021, 10, 22, 2, 29, 20, 172, DateTimeKind.Local).AddTicks(7020),
                            UpdatedBy = 1L,
                            UserName = "admin",
                            _Id = "edfeb122-3656-483b-b477-17c827f44cd4"
                        });
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("user_claims");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserGroup", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint")
                        .HasColumnName("group_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GroupId" }, "user_group_group_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "user_group_user_id_foreign");

                    b.ToTable("user_group");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserInfo", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "user_info_user_id_foreign");

                    b.ToTable("user_info");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("user_logins");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_role");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            RoleId = 1L,
                            CreatedBy = 0L,
                            UpdatedBy = 0L
                        },
                        new
                        {
                            UserId = 1L,
                            RoleId = 2L,
                            CreatedBy = 0L,
                            UpdatedBy = 0L
                        },
                        new
                        {
                            UserId = 1L,
                            RoleId = 3L,
                            CreatedBy = 0L,
                            UpdatedBy = 0L
                        },
                        new
                        {
                            UserId = 1L,
                            RoleId = 4L,
                            CreatedBy = 0L,
                            UpdatedBy = 0L
                        },
                        new
                        {
                            UserId = 1L,
                            RoleId = 5L,
                            CreatedBy = 0L,
                            UpdatedBy = 0L
                        });
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserSecurityQuestion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("SecurityAnswer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("security_answer");

                    b.Property<long>("SecurityQuestionId")
                        .HasColumnType("bigint")
                        .HasColumnName("security_question_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SecurityQuestionId" }, "user_security_question_security_question_id_foreign");

                    b.HasIndex(new[] { "UserId" }, "user_security_question_user_id_foreign");

                    b.ToTable("user_security_question");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserToken", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("user_tokens");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.AnnouncementDatum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Announcement", "Announcement")
                        .WithMany("AnnouncementData")
                        .HasForeignKey("AnnouncementId")
                        .HasConstraintName("announcement_data_announcement_id_foreign")
                        .IsRequired();

                    b.Navigation("Announcement");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.AnnouncementUser", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Announcement", "Announcement")
                        .WithMany("AnnouncementUsers")
                        .HasForeignKey("AnnouncementId")
                        .HasConstraintName("announcement_users_announcement_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("AnnouncementUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("announcement_users_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Announcement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Bundle", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "Instructor")
                        .WithMany("Bundles")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("bundles_instructor_id_foreign")
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.BundleCourse", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Bundle", "Bundle")
                        .WithMany("BundleCourses")
                        .HasForeignKey("BundleId")
                        .HasConstraintName("bundle_courses_bundle_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("BundleCourses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("bundle_courses_course_id_foreign")
                        .IsRequired();

                    b.Navigation("Bundle");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.BundleEnrol", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Bundle", "Bundle")
                        .WithMany("BundleEnrols")
                        .HasForeignKey("BundleId")
                        .HasConstraintName("bundle_enrols_bundle_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("BundleEnrols")
                        .HasForeignKey("UserId")
                        .HasConstraintName("bundle_enrols_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Bundle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Certificate", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("Certificates")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("certificates_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("Certificates")
                        .HasForeignKey("UserId")
                        .HasConstraintName("certificates_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassDatum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassData")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_data_course_class_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassDocument", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassDocuments")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_document_course_class_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Document", "Document")
                        .WithMany("ClassDocuments")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("class_document_document_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassMedium", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassMedia")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_media_course_class_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Medium", "Media")
                        .WithMany("ClassMedia")
                        .HasForeignKey("MediaId")
                        .HasConstraintName("class_media_media_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassMetum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassMeta")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_meta_course_class_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuiz", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassQuizzes")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_quiz_course_class_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Quiz", "Quiz")
                        .WithMany("ClassQuizzes")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("class_quiz_quiz_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuizAnswer", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.ClassQuizTake", "ClassQuizTake")
                        .WithMany("ClassQuizAnswers")
                        .HasForeignKey("ClassQuizTakeId")
                        .HasConstraintName("class_quiz_answers_class_quiz_take_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Option", "Option")
                        .WithMany("ClassQuizAnswers")
                        .HasForeignKey("OptionId")
                        .HasConstraintName("class_quiz_answers_option_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Question", "Question")
                        .WithMany("ClassQuizAnswers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("class_quiz_answers_question_id_foreign")
                        .IsRequired();

                    b.Navigation("ClassQuizTake");

                    b.Navigation("Option");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuizTake", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.ClassQuiz", "ClassQuiz")
                        .WithMany("ClassQuizTakes")
                        .HasForeignKey("ClassQuizId")
                        .HasConstraintName("class_quiz_takes_class_quiz_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("ClassQuizTakes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("class_quiz_takes_user_id_foreign")
                        .IsRequired();

                    b.Navigation("ClassQuiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassUserMetum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("ClassUserMeta")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("class_user_meta_course_class_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("ClassUserMeta")
                        .HasForeignKey("UserId")
                        .HasConstraintName("class_user_meta_user_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Course", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("courses_instructor_id_foreign")
                        .IsRequired();

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseCategory", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Category", "Category")
                        .WithMany("CourseCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("course_category_category_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseCategories")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_category_course_id_foreign")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseClass", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseClasses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_classes_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Section", "Section")
                        .WithMany("CourseClasses")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("course_classes_section_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDatum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseData")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_data_course_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDepartment", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseDepartments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_department_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Group", "Group")
                        .WithMany("CourseDepartments")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("course_department_group_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseDocument", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseDocuments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_document_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Document", "Document")
                        .WithMany("CourseDocuments")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("course_document_document_id_foreign");

                    b.Navigation("Course");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseEnrol", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseEnrols")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_enrols_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("CourseEnrols")
                        .HasForeignKey("UserId")
                        .HasConstraintName("course_enrols_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseImage", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseImages")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_image_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Image", "Image")
                        .WithMany("CourseImages")
                        .HasForeignKey("ImageId")
                        .HasConstraintName("course_image_image_id_foreign");

                    b.Navigation("Course");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseMedium", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseMedia")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_media_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Medium", "Media")
                        .WithMany("CourseMedia")
                        .HasForeignKey("MediaId")
                        .HasConstraintName("course_media_media_id_foreign");

                    b.Navigation("Course");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseMetum", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("CourseMeta")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("course_meta_course_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Note", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.CourseClass", "CourseClass")
                        .WithMany("Notes")
                        .HasForeignKey("CourseClassId")
                        .HasConstraintName("notes_course_class_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("notes_user_id_foreign")
                        .IsRequired();

                    b.Navigation("CourseClass");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Option", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("options_question_id_foreign")
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Question", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("questions_quiz_id_foreign")
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Rating", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("Ratings")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("ratings_course_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("ratings_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Role", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.RoleClaim", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Section", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("sections_course_id_foreign")
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserGroup", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("user_group_group_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_group_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserInfo", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("UserInfos")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_info_user_id_foreign")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserRole", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("user_role_role_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_role_user_id_foreign")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserSecurityQuestion", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.SecurityQuestion", "SecurityQuestion")
                        .WithMany("UserSecurityQuestions")
                        .HasForeignKey("SecurityQuestionId")
                        .HasConstraintName("user_security_question_security_question_id_foreign")
                        .IsRequired();

                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", "User")
                        .WithMany("UserSecurityQuestions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("user_security_question_user_id_foreign")
                        .IsRequired();

                    b.Navigation("SecurityQuestion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.UserToken", b =>
                {
                    b.HasOne("DigitalHubLMS.Core.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Announcement", b =>
                {
                    b.Navigation("AnnouncementData");

                    b.Navigation("AnnouncementUsers");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Bundle", b =>
                {
                    b.Navigation("BundleCourses");

                    b.Navigation("BundleEnrols");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Category", b =>
                {
                    b.Navigation("CourseCategories");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuiz", b =>
                {
                    b.Navigation("ClassQuizTakes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.ClassQuizTake", b =>
                {
                    b.Navigation("ClassQuizAnswers");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Course", b =>
                {
                    b.Navigation("BundleCourses");

                    b.Navigation("Certificates");

                    b.Navigation("CourseCategories");

                    b.Navigation("CourseClasses");

                    b.Navigation("CourseData");

                    b.Navigation("CourseDepartments");

                    b.Navigation("CourseDocuments");

                    b.Navigation("CourseEnrols");

                    b.Navigation("CourseImages");

                    b.Navigation("CourseMedia");

                    b.Navigation("CourseMeta");

                    b.Navigation("Ratings");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.CourseClass", b =>
                {
                    b.Navigation("ClassData");

                    b.Navigation("ClassDocuments");

                    b.Navigation("ClassMedia");

                    b.Navigation("ClassMeta");

                    b.Navigation("ClassQuizzes");

                    b.Navigation("ClassUserMeta");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Document", b =>
                {
                    b.Navigation("ClassDocuments");

                    b.Navigation("CourseDocuments");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Group", b =>
                {
                    b.Navigation("CourseDepartments");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Image", b =>
                {
                    b.Navigation("CourseImages");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Medium", b =>
                {
                    b.Navigation("ClassMedia");

                    b.Navigation("CourseMedia");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Option", b =>
                {
                    b.Navigation("ClassQuizAnswers");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Question", b =>
                {
                    b.Navigation("ClassQuizAnswers");

                    b.Navigation("Options");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Quiz", b =>
                {
                    b.Navigation("ClassQuizzes");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.Section", b =>
                {
                    b.Navigation("CourseClasses");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.SecurityQuestion", b =>
                {
                    b.Navigation("UserSecurityQuestions");
                });

            modelBuilder.Entity("DigitalHubLMS.Core.Data.Entities.User", b =>
                {
                    b.Navigation("AnnouncementUsers");

                    b.Navigation("BundleEnrols");

                    b.Navigation("Bundles");

                    b.Navigation("Certificates");

                    b.Navigation("ClassQuizTakes");

                    b.Navigation("ClassUserMeta");

                    b.Navigation("CourseEnrols");

                    b.Navigation("Courses");

                    b.Navigation("Notes");

                    b.Navigation("Ratings");

                    b.Navigation("Roles");

                    b.Navigation("UserGroups");

                    b.Navigation("UserInfos");

                    b.Navigation("UserRoles");

                    b.Navigation("UserSecurityQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
